---
eleventyExcludeFromCollections: true
title: "CV"
description: "Curriculum vitae"
cover: /public/img/me.jpg
---

doctype html
html(lang='en')
  head
    include /head.pug

    //- Styles
    link(rel='stylesheet' href='/public/styles/cv.css')
    link(rel='stylesheet' href='/public/styles/posts.css')
    link(rel='stylesheet' href='/public/styles/projects.css')

  style(lang="css").
    .history li {
      line-height: 1.3;
    }

    .history li:not(:last-child) {
      margin-bottom: 0.5rem;
    }

  body
    include /header.pug

    main
      section#about
        h2 Curriculum vitae
        p
          | Throughout my 10+ years of experience in Information Technology,
          |
          b I've tried everything
          |
          | from compiling COFF after LLIR lowering to designing a resilient ultra-scalable fleet of FAAS workers, from Substrate and IPFS to event-driven stock price prediction.
        p
          | Comprehending a technology is like surfing on the waves of technology trends, on the surface of the greatest whirlpool of singularity. Comprehension means fundamental, decomposed knowledge enough to build a solution at
          |
          b any scale
          | .
        p
          | For me, it is not about thoroughly learning API of yet another web framework, it is instead getting hands on the set of tooling a technology offers, so that I may choose the
          |
          mark
            b best framework suitable for the problem
          |
          | . If I were to compile my 10+ years of experience into one line, that would be the following:
        big Right tooling is paramount.
        p
          | Here is an incomplete list of technologies I've had experience with, in the order of  encounter, starting back in 2013: Pascal,&nbsp;
          a(href="https://wc3modding.info/pages/vjass-documentation/" target="_blank") vJass
          | , cJass, C, C++, Java, git,&nbsp;
          a(href="https://libgdx.com/" target="_blank") LibGDX
          | , PHP,&nbsp;
          a(href="https://unity.com/" target="_blank") Unity
          | , C#, Ruby, Telegram,&nbsp;
          a(href="https://www.heroku.com/" target="_blank") Heroku
          | ,&nbsp;
          a(href="https://dokku.com/" target="_blank") Dokku
          | , SQLite, PostgreSQL, Redis, Docker, JavaScript, Gulp, Grunt, Ruby On Rails,&nbsp;
          a(href="https://hanamirb.org/" target="_blank") Hanami
          | ,&nbsp;
          a(href="https://roda.jeremyevans.net/" target="_blank") Roda
          | , &nbsp;
          a(href="https://sequel.jeremyevans.net/" target="_blank") Sequel
          | ,&nbsp;
          a(href="https://crystal-lang.org/" target="_blank") Crystal
          | , LLVM, Kubernetes,&nbsp;
          a(href="https://firecracker-microvm.github.io/" target="_blank") Firecracker
          | ,&nbsp;
          a(href="http://www.tinycorelinux.net/" target="_blank") Tiny Core Linux
          | ,&nbsp;
          a(href="https://buildpacks.io/" target="_blank") buildpacks.io
          | , compiler development, machine learning,&nbsp;
          a(href="https://www.tensorflow.org/" target="_blank") Tensorflow
          | , VueJS, TypeScript,&nbsp;
          a(href="https://deno.land/" target="_blank") Deno
          | ,&nbsp;
          a(href="https://ziglang.org/" target="_blank") Zig
          | ,&nbsp;
          a(href="https://en.wikipedia.org/wiki/Parsing_expression_grammar" target="_blank") PEG
          | , Rust, EVM, Solidity,&nbsp;
          a(href="https://substrate.io/" target="_blank") Substrate
          | , IPFS, ZKP, ChatGPT.
        ul.history(style="align-self: start;")
          li
            b 2013:
            |
            | It all began with Warcraft®️ III™️ maps, such as&nbsp;
            a(href="https://xgm.guru/p/ufs/index" target="_blank") UFS Arena
            | . I did all the
            |
            b coding
            |
            | (cJass, a C-like domain-specific language) and
            |
            b design
            | , and my maps gained some popularity in the Russian-speaking community.
          li
            b 2014:
            |
            | First steps in commercial product development:&nbsp;
            a(href="https://www.dropbox.com/s/xc8kjswj4fb0m0z/presentation.pdf?dl=0" target="_blank") Anogram
            | , a social anonymous service project. I did the
            |
            b design and backend coding
            |
            |in PHP. Unfortunately, the trend had quickly detoriated.
          li
            b 2015:
            ul
              li
                | In 2015, I released an Android game called
                |
                a(href="https://www.moddb.com/games/jumpin-sweeties/videos/trailer" target="_blank") Jumpin Sweeties
                | , written with
                |
                b LibGDX
                | . My family and friends liked it, but it didn't gain much traction.
              li
                | With
                |
                b Ruby on Rails
                | , I created a Bitcoin service for SMS number confirmations based on Google Voice, and after a couple of months sold it to a foreign customer for a good price. This marked the beginning of my journey as a
                |
                b solo entrepreneur
                | .
          li
            b 2016:
            ul
              li
                | This was the year of
                |
                b Telegram bots
                |
                | for me. First, I created
                |
                a(href="https://profitrobot.me/" target="_blank") @profitrobot
                | , which climbed pretty hign in the bot store rating. The bot allowed users to earn lunch money by completing CPA tasks and watching advertisements. Profitrobot became
                |
                a(href="/public/img/posts/2020-08-07-hello-world/bot-a-users-graph.jpg") quite popular,
                |
                | and I managed to sell it to another entrepreneur.
              li
                | In parallel I worked on
                |
                a(href="https://t.me/soundmemesbot" target="_blank") @soundememesbot
                | , which allowed its users to post sound memes in chats. Long story short, the bot became
                |
                mark massively popular all around the world
                | , but I did struggle to monetize it. Required moderation efforts made me shut it down. Also, later Telegram team silently
                |
                a(href="https://fragment.com/username/soundmemes" target="_blank") took away the @soundememes username
                |
                | and deleted the channel, which is definetely a lesson learned.
                |
                small BTW, I still have the source code and sounds database, sometimes thinking about launching it again with NFTs...
          li
            b 2017:
            |
            | Not all the projects are destined to become viable, such that was&nbsp;
            a(href="https://telegra.ph/CashbackBot-09-16" target="_blank") CashbackBot
            | , a Telegram bot for
            |
            b cashback services
            | . I've spent a lot of time building it, but the project was never launched, nor it was sold.
          li
            b 2018:
            |
            | This year marked the beggining of my two-years journey in the
            |
            a(href="https://crystal-lang.org/" target="_blank") Crystal programming language
            |
            | ecosystem. I loved being a part of
            |
            mark open-source
            |
            | (check out my
            |
            a(href="https://github.com/vladfaust") GitHub
            | !). I created many libraries, including
            |
            a(href="https://github.com/onyxframework/http") web framework
            |
            | and
            |
            a(href="https://github.com/onyxframework/sql") ORM
            | , and even
            |
            b contributed into the language
            |
            | itself. Also check out my
            |
            a(href="https://medium.com/@vladfaust/sorbet-is-cool-but-crystal-is-smoother-d16f4a920108" target="_blank") article
            |
            | comparing Crystal to Stripe's Sorbet.
          li
            b 2020:
            |
            | By 2020, I was fed with all the imperfections of the Crystal ecosystem, and decided to move and build
            |
            mark my own programming language
            | , Onyx. Oh, that was a ride. Long story short, too much for a single person. Yet,
            |
            b an enormous amount of computer science experience
            |
            | gained. Just look at the plethora of Onyx compilers I was working on:
            |
            a(href="https://github.com/fancysofthq/phoenix") C++
            | ,
            |
            a(href="https://github.com/onyxlang/rs") Rust
            |
            | and even
            |
            a(href="https://github.com/onyxlang/ts") TypeScript with Zig
            | ! The
            |
            a(href="/posts/2020-08-16-system-programming-in-2k20/") System Programming in 2k20
            |
            | article is still one of the best I've written.
          li
            b 2021:
            |
            |
            mark Senior Crystal developer
            |
            | at
            |
            a(href="https://brightsec.com/" target="_blank") NeuraLegion
            | , an Israeli web security company. Nothing fancy, just some good old JSON APIs.
          li
            b 2022:
            |
            | I was employed by
            |
            a(href="https://byzantine.solutions/" target="_blank") Byzantine.Solutions
            |
            | on the role of a
            |
            mark Technical Due Diligence Officer
            |
            | . I inspected and contributed to some of the biggest crypto projects of that time. I also did some crypto project of my own (see below).
          li
            b 2023:
            |
            | The epiphany of AI had occured, my mind has cracked, and I've lost the sense of what is past and what is future. Yet I managed to work on some private AI projects at the role of a
            |
            mark full-stack+prompt engineer
            | .

        p
          | Check out my
          |
          a(href="https://wakatime.com/@vladfaust" target="_blank") profile at Wakatime
          | ; since I've began tracking my time in 2018, I've coded over 6000 hours, resulting in 1000 hours a year average. Take a look at this glorious chart of my favorite languages:

        figure(style="width: 100%")
          embed(src="https://wakatime.com/share/@vladfaust/92441f4f-e368-4bc3-a53b-9a3100aaa45c.svg")

        p
          | Currently I'm working on
          |
          mark AI character simulations
          | . My best stack is prompt engineering, custom AI model deployment, Typescript, VueJS, NodeJS, tRPC and Zod.
          | I extensively use
          |
          a(href="https://github.com/features/copilot" target="_blank") GitHub Copilot
          |
          | for code generation.

        p
          | See my blog posts (especially the
          |
          a(href="/posts/2020-08-07-hello-world") personal introduction
          | ) and projects below, check my
          |
          a(href="https://github.com/vladfaust") GitHub profile
          | , find my contacts in the header, and feel free to reach out if you want to work with me.
        p
          | Sincerely,
          br
          | Vlad.

      section#posts
        h2 Recent blog posts
        include /posts.pug

      section#projects
        h2 Project list
        include /projects.pug

    include /footer.pug
